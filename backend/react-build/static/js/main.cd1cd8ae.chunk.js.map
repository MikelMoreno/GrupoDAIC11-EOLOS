{"version":3,"sources":["elements/ResponsiveDrawer.js","elements/DeviceList.js","pages/HomePage.js","pages/AccountPage.js","elements/DeviceInfoPanel.js","elements/RoomInfoPanel.js","elements/DeviceSettingsPanel.js","elements/DeviceAnalyticsPanel.js","pages/DevicePage.js","PrivateApp.js","pages/LoginPage.js","PublicApp.js","App.js","reportWebVitals.js","index.js","services/deviceServices.js","services/authServices.js","config.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","className","Divider","List","to","pathname","style","textDecoration","ListItem","button","ListItemIcon","ListItemText","primary","onClick","onLogout","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","color","aria-label","edge","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","appContent","DeviceList","Grid","this","devices","map","dev","item","xs","sm","md","identifier","Paper","textAlign","room","name","description","_id","Component","HomePage","user","email","AccountPage","ReadOnlyField","TextField","disabled","id","label","defaultValue","text","InputProps","readOnly","DeviceInfoPanel","device","public_url","Field","onChange","event","setValue","target","value","RoomInfoPanel","setName","desc","setDesc","volume","setVolume","type","Button","updateRoom","handleInputChange","DeviceSettingsPanel","state","tem","tes","maxgas","maxhcho","dev_online","bind","handleSubmit","requestGetParams","res","console","log","error","setState","TEM","TES","MAXGAS","MAXHCHO","requestEditParams","success","alert","Chart","src","url","height","heightMultiplier","frameBorder","DeviceAnalyticsPanel","charts","grafana_panels","index","DeviceDetailsPanel","newDev","updateUser","updatedDevice","requestEditRoom","DevicePage","location","split","detailsExpanded","setDetailsExpanded","dashboardExpanded","setDashboardExpanded","ret","forEach","getDeviceByIdentifier","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","PrivateApp","getAppContent","exact","path","component","handleLogout","marginTop","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","set","LoginPage","setEmail","password","setPassword","Container","maxWidth","Avatar","noValidate","required","fullWidth","autoComplete","autoFocus","onLogin","PublicApp","handleLogin","requestLogin","notifyLogin","App","requestWhoami","result","requestLogout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","cloud_url","require","config","module","exports","callback","requestOptions","method","credentials","headers","JSON","stringify","fetch","json","requestCreateDevice","requestGetDevice","deviceID","requestSignup","username","repassword"],"mappings":"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","file":"static/js/main.cd1cd8ae.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <Divider />\n      <List>\n        <Link to={{\n          pathname: \"/\"\n        }} style={{ textDecoration: 'none' }}>\n          <ListItem button key=\"Home\" >\n            <ListItemIcon><InboxIcon /></ListItemIcon>\n            <ListItemText primary=\"Home\" />\n          </ListItem>\n        </Link>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button key=\"Log out\" onClick={props.onLogout}>\n          <ListItemIcon><InboxIcon /></ListItemIcon>\n          <ListItemText primary=\"Log out\" />\n        </ListItem>\n      </List>\n\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Project Eolos\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.appContent}\n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nclass DeviceList extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Typography variant=\"h5\">Your devices:</Typography><br />\n                <Grid container spacing={3}>\n                    {this.props.devices.map(dev => (\n                        <Grid item xs={12} sm={6} md={3} key={dev._id}>\n                            <Link\n                                to={{\n                                    pathname: \"/device/\" + dev.identifier\n                                }}\n                                style={{ textDecoration: \"none\" }}\n                            >\n                                <Paper style={{ padding: \"10px\" }}>\n                                    <div style={{textAlign: \"center\"}}>\n                                        <Typography variant=\"h6\">{dev.identifier}</Typography><br/>\n                                        <Typography>Room: {dev.room.name}</Typography><br/>\n                                        <Typography>{dev.room.description}</Typography>\n                                    </div>\n                                </Paper>\n                            </Link>\n                        </Grid>\n                    ))}\n                </Grid>\n            </div>\n        );\n    }\n\n}\n\nexport default DeviceList;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport DeviceList from '../elements/DeviceList';\n\nclass HomePage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    render() {\n        return (\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n                    <div>\n                        <Typography variant=\"h5\">Welcome back</Typography><br />\n                        <Typography variant=\"subtitle1\">{this.props.user.email}</Typography>\n                    </div>\n                </Grid>\n                <Grid item xs={12}>\n                    <DeviceList \n                        devices={this.props.user.devices}\n                    />\n                </Grid>\n            </Grid>\n        );\n    }\n\n}\n\nexport default HomePage;\n","import React from 'react';\n\nclass AccountPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <p>Account page</p>\n        );\n    }\n\n}\n\nexport default AccountPage;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\nfunction ReadOnlyField(props) {\n    return (\n        <div>\n            <TextField\n                disabled\n                id={\"outlined-read-only-input\" + props.label}\n                label={props.label}\n                defaultValue={props.text}\n                InputProps={{\n                    readOnly: true,\n                }}\n                style={{width: \"100%\"}}\n                variant=\"outlined\"\n            /><br /><br/>\n        </div>\n    );\n}\n\nexport default function DeviceInfoPanel(props) {\n\n    return (\n        <Paper style={{ padding: \"15px\" }}>\n            <Typography variant=\"h6\">Information</Typography><br />\n            <div style={{width: \"100%\"}}> \n                <ReadOnlyField\n                    label=\"Identifier\"\n                    text={props.device.identifier} />\n                <ReadOnlyField\n                    label=\"Current public URL\"\n                    text={props.device.public_url} />\n                    \n            </div>\n        </Paper>\n    );\n}","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction Field(props) {\n    return (\n        <div>\n            <TextField\n                id={\"outlined-input\" + props.label}\n                label={props.label}\n                defaultValue={props.text}\n                style={{width: \"100%\"}}\n                variant=\"outlined\"\n                onChange={(event) => {\n                    props.setValue(event.target.value);\n                }}\n            /><br /><br/>\n        </div>\n    );\n}\n\nexport default function RoomInfoPanel(props) {\n\n    const [name, setName] = useState(props.room ? props.room.name : \"\");\n    const [desc, setDesc] = useState(props.room ? props.room.description : \"\");\n    const [volume, setVolume] = useState(props.room ? props.room.volume : 0);\n\n    return (\n        <Paper style={{ padding: \"15px\" }}>\n            <Typography variant=\"h6\">Room</Typography><br />\n            <div style={{width: \"100%\"}}> \n                <Field\n                    label=\"Name\"\n                    text={name} \n                    setValue={setName} />\n                <Field\n                    label=\"Description\"\n                    text={desc} \n                    setValue={setDesc} />\n                <TextField \n                    type=\"number\"\n                    defaultValue={volume}\n                    label=\"Room volume\"\n                    variant=\"outlined\"\n                    style={{width: \"100%\"}}\n                    onChange={event => setVolume(event.target.value)}\n                /><br/><br/>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"    \n                    style={{width: \"100%\"}}\n                    onClick={() => props.updateRoom(name, desc, volume)}\n                >\n                    Update room\n                </Button>\n            </div>\n        </Paper>\n    );\n}","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { requestGetParams, requestEditParams } from '../services/deviceServices';\n\nfunction Field(props) {\n    return (\n        <div>\n            <TextField\n                name={props.name}\n                id={\"outlined-input\" + props.label}\n                label={props.label}\n                defaultValue={props.text}\n                InputProps={{\n                    readOnly: false,\n                }}\n                style={{ width: \"100%\" }}\n                onChange={props.handleInputChange}\n                variant=\"outlined\"\n            /><br /><br />\n        </div>\n    );\n}\n\nclass DeviceSettingsPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tem: -1,\n            tes: -1,\n            maxgas: -1,\n            maxhcho: -1,\n            dev_online: false\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        requestGetParams(this.props.device.identifier, res => {\n            console.log(\"resssp\")\n            console.log(res)\n            if (!res.error) {\n                return this.setState({\n                    tem: res.TEM,\n                    tes: res.TES,\n                    maxgas: res.MAXGAS,\n                    maxhcho: res.MAXHCHO,\n                    dev_online: true\n                });\n            } \n\n            this.setState({\n                dev_online: false\n            });\n\n        })\n    }   \n\n    handleInputChange(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit() {\n        console.log(\"submit clicked\")\n        let { tem, tes, maxgas, maxhcho } = this.state;\n        requestEditParams(this.props.device.identifier, tes, tem, maxgas, maxhcho, res => {\n            console.log(\"rewp\")\n            console.log(res)\n\n            if (!res.success) {\n                alert(\"Operation failed\")\n            } else {\n                alert(\"Operation succeeded\")\n            }\n        })\n    }\n\n    render() {\n        \n        if (!this.state.dev_online) {\n            return (\n                <Paper style = {{ padding: \"15px\" }}>\n                    <Typography variant=\"h6\">Parameters</Typography><br />\n                    <Typography variant=\"subtitle1\">Can't connect to device</Typography>\n                </Paper>\n            );\n        }\n\n        return(\n            <Paper style = {{ padding: \"15px\" }}>\n                <Typography variant=\"h6\">Parameters</Typography><br />\n                <div style={{ width: \"100%\" }}>\n                    <Field\n                        name=\"tem\"\n                        label=\"Seconds between measurements\"\n                        text={this.state.tem} \n                        handleInputChange={this.handleInputChange}\n                        readOnly={false}/>\n                    <Field\n                        name=\"tes\"\n                        label=\"Seconds between syncs\"\n                        text={this.state.tes} \n                        handleInputChange={this.handleInputChange}\n                        readOnly={false}/>\n                    <Field\n                        name=\"maxgas\"\n                        label=\"Max gas value\"\n                        text={this.state.maxgas}\n                        handleInputChange={this.handleInputChange}\n                        readOnly={false}/>\n                    <Field\n                        name=\"maxhcho\"\n                        label=\"Max HCHO value\"\n                        text={this.state.maxhcho}\n                        handleInputChange={this.handleInputChange}\n                        readOnly={false} />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ width: \"100%\" }}\n                        onClick={this.handleSubmit}\n                    >\n                        Update settings\n                    </Button>\n                </div>\n            </Paper >\n        );\n    }\n\n}\n\nexport default DeviceSettingsPanel;","import React from 'react';\n\nfunction Chart(props) {\n    return (\n        <iframe\n            src={props.url + \"&theme=light\"}\n            width=\"450\"\n            height={200 * props.heightMultiplier}\n            frameBorder=\"0\" ></iframe>\n    );\n}\n\nexport default function DeviceAnalyticsPanel(props) {\n\n    // return (\n    //     <div>\n    //         {props.device.grafana_panels.map(url => {\n    //             return (\n    //                 <iframe\n    //                     src={url + \"&theme=light\"}\n    //                     width=\"450\"\n    //                     height=\"200\"\n    //                     frameBorder=\"0\" ></iframe>\n    //             );\n    //         })}\n    //     </div>\n    // );\n\n    let panels_urls = props.device.grafana_panels;\n    let charts = panels_urls.map((url, index) => <Chart url={url} heightMultiplier={index > 2 && index < 5 ? 1.5 : 1}/>);\n\n    return <div>{charts}</div>;\n\n\n}","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport DeviceInfoPanel from '../elements/DeviceInfoPanel';\nimport RoomInfoPanel from '../elements/RoomInfoPanel';\nimport DeviceSettingsPanel from '../elements/DeviceSettingsPanel';\nimport DeviceAnalyticsPanel from '../elements/DeviceAnalyticsPanel';\n\nimport { requestEditRoom } from '../services/deviceServices';\n\nconst getDeviceByIdentifier = (user, identifier) => {\n    let ret = null;\n\n    user.devices.forEach(dev => {\n        if (dev.identifier === identifier) ret = dev;\n    });\n\n    return ret;\n}\n\nconst updateDevice = (newDev, updateUser) => {\n    requestEditRoom(newDev, (res) => {\n        console.log(\"response:\")\n        console.log(res)\n        if (!res.error) {\n            updateUser(res.user);\n        }\n    });\n}\n\nfunction DeviceDetailsPanel(props) {\n    const device = props.device;\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} sm={3}>\n                <DeviceInfoPanel\n                    device={device}\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <RoomInfoPanel\n                    room={device.room}\n                    updateRoom={(name, desc, volume) => {\n                        let updatedDevice = props.device;\n                        updatedDevice.room = {\n                            name: name,\n                            description: desc,\n                            volume: volume\n                        };\n\n                        updateDevice(updatedDevice, props.updateUser);\n                    }}\n                />\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <DeviceSettingsPanel\n                    device={device}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default function DevicePage(props) {\n\n    let identifier = window.location.pathname.split(\"/\")[2];\n\n    const [detailsExpanded, setDetailsExpanded] = useState(true);\n    const [dashboardExpanded, setDashboardExpanded] = useState(true);\n\n    if (!props.user) return null;\n\n    let device = getDeviceByIdentifier(props.user, identifier);\n\n    if (!device) return null;\n\n    return (\n        <div>\n            <Typography variant=\"h5\">Device {device.identifier}</Typography><br />\n            <Accordion expanded={detailsExpanded}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    onClick={() => setDetailsExpanded(!detailsExpanded)}\n                    id=\"panel1a-header\"\n                >\n                    <Typography variant=\"h6\">Details</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <DeviceDetailsPanel \n                        device={device} \n                        updateUser={props.updateUser}\n                    />\n                </AccordionDetails>\n            </Accordion>\n            <Accordion expanded={dashboardExpanded}>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel2a-content\"\n                    onClick={() => setDashboardExpanded(!dashboardExpanded)}\n                    id=\"panel2a-header\"\n                >\n                    <Typography variant=\"h6\">Analytics</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <DeviceAnalyticsPanel \n                        device={device}\n                    />\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}","import React from 'react';\nimport ResponsiveDrawer from './elements/ResponsiveDrawer';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AccountPage from './pages/AccountPage';\nimport DevicePage from './pages/DevicePage';\n\nclass PrivateApp extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.getAppContent = this.getAppContent.bind(this);\n    }\n\n    getAppContent() {\n        return (\n            <Switch>\n                <Route exact path=\"/account\">\n                    <AccountPage \n\n                    />                    \n                </Route>\n                <Route path=\"/device/:id\" component={() => \n                    <DevicePage\n                        user={this.props.user}\n                        updateUser={this.props.updateUser}\n                    />\n                }>                    \n                </Route>\n                <Route path=\"/\">\n                    <HomePage \n                        user={this.props.user}\n                    />\n                </Route>\n            </Switch>\n        );\n    }\n\n    render() {\n        return (\n            <ResponsiveDrawer\n                appContent={this.getAppContent()} \n                onLogout={this.props.handleLogout}/>\n        );\n    }\n\n}\n\nexport default PrivateApp;","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst handleInputChange = (event, set) => {\n    const target = event.target;\n    const value = target.value;\n\n    set(value);\n}\n\nexport default function LoginPage(props) {\n    const classes = useStyles();\n\n    const [finished, setFinished] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n        </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        value={email}\n                        onChange={(event) => { handleInputChange(event, setEmail) }}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(event) => { handleInputChange(event, setPassword) }}\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"button\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => { props.onLogin(email, password) }}\n                        className={classes.submit}\n                    >\n                        Log In\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","import { AppBar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport LoginPage from './pages/LoginPage';\nimport { requestLogin } from './services/authServices';\n\nclass PublicApp extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleLogin(email, password) {\n        requestLogin(email, password, (res) => {\n            if (!res.error) {\n                return this.props.notifyLogin(res);\n            }\n\n            alert(\"Invalid credentials\")\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <AppBar>\n                    <div\n                        style={{padding: \"15px\", textAlign: \"center\"}}\n                    >\n                        <Typography variant=\"h4\">Project Eolos</Typography>\n                    </div>\n                </AppBar><br/>\n                <LoginPage\n                    onLogin={this.handleLogin} \n                />\n            </div>\n        );\n    }\n\n}\n\nexport default PublicApp;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport PrivateApp from './PrivateApp';\nimport PublicApp from './PublicApp';\nimport { requestWhoami, requestLogout } from './services/authServices';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null\n        }\n\n        this.handleLogin = this.handleLogin.bind(this);\n        this.updateUser = this.updateUser.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    componentDidMount() {\n\t\trequestWhoami((result) => {\n\t\t\tthis.setState({\n\t\t\t\tuser: result.user\n\t\t\t})\n\t\t});\n\t}\n\n    handleLogin(user) {\n\t\tthis.setState({\n\t\t\tuser: user\n\t\t})\n    }\n    \n    updateUser(user) {\n        this.setState({\n            user: user\n        })\n    }\n\n    handleLogout() {\n        requestLogout((res) => {\n\t\t\tthis.setState({\n\t\t\t\tuser: null\n\t\t\t});\n\t\t})\n    }\n\n    render() {\n        return (\n            <Router>\n                {\n                    this.state.user\n                        ?\n                        <Switch>\n                            <Route path=\"/\">\n                                <PrivateApp \n                                    user={this.state.user}\n                                    updateUser={this.updateUser}\n                                    handleLogout={this.handleLogout}\n                                />                                \n                            </Route>\n                        </Switch>\n                        :\n                        <Switch>\n                            <Route path=\"/\">\n                                <PublicApp\n                                    notifyLogin={this.handleLogin}\n                                />\n                            </Route>\n                        </Switch>\n                }\n            </Router>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const cloud_url = require('../config').config.cloud_url;\n\n/**\n * Mofifica el valor 'room' del device seleccionado\n * @param {*} identifier \n * @param {*} public_url \n * @param {*} name \n * @param {*} description \n * @param {*} volume \n * @param {*} grafana_panels \n * @param {*} callback \n */\nconst requestEditRoom = (updatedDevice, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            device: updatedDevice\n        })\n    };\n\n    fetch(cloud_url + \"/api/device/update/room\", requestOptions)\n        .then(res => res.json())\n        .then((res) => {\n            callback(res);\n        });\n}\n\n/**\n * Crea un device con los datos de entrada\n * @param {*} identifier \n * @param {*} public_url \n * @param {*} name \n * @param {*} description \n * @param {*} volume \n * @param {*} grafana_panels \n * @param {*} callback \n */\nconst requestCreateDevice = (identifier, public_url, name, description, volume, grafana_panels, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            device: {\n                identifier: identifier,\n                public_url: public_url,\n                room: {\n                    name: name,\n                    description: description,\n                    volume: volume\n                },\n                grafana_panels: grafana_panels\n            }\n        })\n    };\n\n    //direccion de la 'nube'\n    fetch(cloud_url + \"/api/device/create\", requestOptions)\n        .then(res => res.json())\n        .then((res) => {\n            callback(res);\n        });\n}\n\n/**\n * devuelve los valores del identifier indicado\n * @param {*} identifier \n * @param {*} callback \n */\nconst requestGetDevice = (identifier, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            identifier: identifier\n        })\n    };\n\n    //direccion de la 'nube'\n    fetch(cloud_url + \"/api/device/get\", requestOptions)\n        .then(res => res.json())\n        .then((res) => {\n            callback(res);\n        });\n}\n\n\n/**\n * devuelve los valores del json de la rasp\n * @param {*} identifier \n * @param {*} callback \n */\nconst requestGetParams = (identifier, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            deviceID: identifier\n        })\n    };\n\n    //direccion de la 'nube'\n    fetch(cloud_url + \"/api/device/params/get\", requestOptions)\n        .then(res => res.json())\n        .then((res) => {\n            callback(res);\n        });\n}\n\nconst requestEditParams = (identifier, TES, TEM, MAXGAS, MAXHCHO, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            deviceID: identifier,\n            TES: TES,\n            TEM: TEM,\n            MAXGAS: MAXGAS,\n            MAXHCHO: MAXHCHO\n        })\n    };\n\n    //direccion de la 'nube'\n    fetch(cloud_url + \"/api/device/params/edit\", requestOptions)\n        .then(res => res.json())\n        .then((res) => {\n            callback(res);\n        });\n}\n\nmodule.exports.requestEditRoom = requestEditRoom;\nmodule.exports.requestCreateDevice = requestCreateDevice;\nmodule.exports.requestGetDevice = requestGetDevice;\nmodule.exports.requestGetParams = requestGetParams;\nmodule.exports.requestEditParams = requestEditParams;","const cloud_url = require('../config').config.cloud_url;\n\nconst requestSignup = (username, email, password, repassword, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            email: email,\n            password: password,\n            repassword: repassword\n        })\n    };\n\n    fetch(cloud_url + \"/auth/signup\", requestOptions)\n        .then(res => res.json()) \n        .then((res) => {\n            callback(res);\n    });\n}\n\nconst requestLogin = (email, password, callback) => {\n    let requestOptions = {\n        method: 'POST',\n        credentials: 'include',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            email: email,\n            password: password\n        })\n    };\n\n    fetch(cloud_url + \"/auth/login\", requestOptions)\n        .then(res => res.json()) \n        .then((res) => {\n            callback(res);\n        })\n}\n\nconst requestWhoami = (callback) => {\n    fetch(cloud_url + \"/auth/whoami\", {credentials: 'include'})\n        .then(res => res.json())\n        .then((res) => { callback(res) });\n}\n\n\nconst requestLogout = (callback) => {\n    fetch(cloud_url + \"/auth/logout\", {credentials: 'include'})\n        .then(res => res.json())\n        .then((res) => { callback(res) });\n}\n\nmodule.exports.requestSignup = requestSignup;\nmodule.exports.requestLogin = requestLogin;\nmodule.exports.requestWhoami = requestWhoami;\nmodule.exports.requestLogout = requestLogout;","let config = {\n    cloud_url: \"http://93.189.90.190:80\"\n};\n\nmodule.exports.config = config;\n"],"sourceRoot":""}